Script started on Thu 08 Sep 2016 08:35:01 PM UTC
ubuntu@slee208-cs_main-2159204: ~/workspace/multithreading/riemann_sum/src (master) $ g++ --std=c++11 -pthread main.cpp
main.cpp: In function ‘void get_total(std::vector<thread_data>, int)’:
main.cpp:44:61: error: use of deleted function ‘thread_data::thread_data(const thread_data&)’
     thread_data current_thread = thread_data_vector.at(index);
                                                             ^
In file included from riemann.cpp:1:0,
                 from main.cpp:14:
riemann.h:11:7: note: ‘thread_data::thread_data(const thread_data&)’ is implicitly deleted because the default definition would be ill-formed:
 class thread_data {
       ^
riemann.h:11:7: error: use of deleted function ‘std::mutex::mutex(const std::mutex&)’
In file included from riemann.h:4:0,
                 from riemann.cpp:1,
                 from main.cpp:14:
/usr/include/c++/4.8/mutex:128:5: error: declared here
     mutex(const mutex&) = delete;
     ^
main.cpp: In lambda function:
main.cpp:56:75: error: passing ‘const thread_data’ as ‘this’ argument of ‘bool thread_data::get_sharing_condition(std::vector<thread_data>)’ discards qualifiers [-fpermissive]
             return current_thread.get_sharing_condition(thread_data_vector);
                                                                           ^
main.cpp: In function ‘void get_total(std::vector<thread_data>, int)’:
main.cpp:55:9: error: use of deleted function ‘thread_data::thread_data(const thread_data&)’
         [current_thread, thread_data_vector] (void)->bool {
         ^
main.cpp: In lambda function:
main.cpp:59:55: error: passing ‘const thread_data’ as ‘this’ argument of ‘void thread_data::callback(std::vector<thread_data>)’ discards qualifiers [-fpermissive]
             current_thread.callback(thread_data_vector);
                                                       ^
main.cpp: In function ‘void get_total(std::vector<thread_data>, int)’:
main.cpp:58:9: error: use of deleted function ‘thread_data::thread_data(const thread_data&)’
         [current_thread, thread_data_vector] (void) {
         ^
In file included from /usr/include/c++/4.8/vector:62:0,
                 from main.cpp:4:
/usr/include/c++/4.8/bits/stl_construct.h: In instantiation of ‘void std::_Construct(_T1*, _Args&& ...) [with _T1 = thread_data; _Args = {const thread_data&}]’:
/usr/include/c++/4.8/bits/stl_uninitialized.h:75:53:   required from ‘static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const thread_data*, std::vector<thread_data> >; _ForwardIterator = thread_data*; bool _TrivialValueTypes = false]’
/usr/include/c++/4.8/bits/stl_uninitialized.h:117:41:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const thread_data*, std::vector<thread_data> >; _ForwardIterator = thread_data*]’
/usr/include/c++/4.8/bits/stl_uninitialized.h:258:63:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const thread_data*, std::vector<thread_data> >; _ForwardIterator = thread_data*; _Tp = thread_data]’
/usr/include/c++/4.8/bits/stl_vector.h:316:32:   required from ‘std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = thread_data; _Alloc = std::allocator<thread_data>]’
main.cpp:56:75:   required from here
/usr/include/c++/4.8/bits/stl_construct.h:75:7: error: use of deleted function ‘thread_data::thread_data(const thread_data&)’
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^
ubuntu@slee208-cs_main-2159204: ~/workspace/multithreading/riemann_sum/src (master) $ exit

Script done on Thu 08 Sep 2016 08:35:13 PM UTC
